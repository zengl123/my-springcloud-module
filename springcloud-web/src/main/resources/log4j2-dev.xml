<?xml version="1.0" encoding="UTF-8"?>
<!--
    status : 这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成TRACE时,会看到log4j2内部各种详细输出
    monitorInterval : Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数。此处表示每隔几秒重读一次配置文件.
    日志级别：TRACE < DEBUG < INFO < WARN < ERROR < FATAL
    如果设置为WARN，则低于WARN的信息都不会输出
-->
<Configuration status="off" monitorInterval="30">
    <!-- 参数配置 -->
    <!-- ThresholdFilter：配置的日志过滤
                如果要输出的日志级别在当前级别及以上，则为match，否则走mismatch
                ACCEPT： 执行日志输出；DENY： 不执行日志输出，结束过滤；NEUTRAL： 不执行日志输出，执行下一个过滤器 -->
    <!--<ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>-->
    <!-- 日志输出的格式
        %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间,输出到毫秒的时间
        %-5p (level) : 输出日志级别，-5表示左对齐并且固定输出5个字符，如果不足在右边补0
        %c (logger) : logger的名称(%logger)
        %t (thread) : 输出当前线程名称
        %m : 日志内容，即 logger.info("message")
        %n : 换行符
        %C : Java类名(%F)
        %L : 行号
        %M : 方法名
        %l : 输出语句所在的行数, 包括类名、方法名、文件名、行数
        hostName : 本地机器名
        hostAddress : 本地ip地址
     -->
    <Properties>
        <!-- 配置日志文件输出目录 -->
        <Property name="LOG_HOME">/logs</Property>
        <!-- 日志输出文件名 -->
        <property name="FILE_NAME">log</property>
        <!-- 日志格式化 -->
        <property name="console_pattern_layout">
            %highlight{%d{yyyy-MM-dd HH:mm:ss.SSS} [%5level][%logger{36}]-(%t)} %m%n
        </property>
        <property name="pattern_layout">
            %d{yyyy-MM-dd HH:mm:ss.SSS} [%5level][%logger{36}]-(%t) %m%n
        </property>
    </Properties>

    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${console_pattern_layout}"/>
        </Console>
        <RollingRandomAccessFile name="ALL"
                                 immediateFlush="true" fileName="${LOG_HOME}/${FILE_NAME}.log"
                                 filePattern="${LOG_HOME}/${FILE_NAME}.log.%d{yyyy-MM-dd}_%i">>
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${pattern_layout}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
            </Policies>
        </RollingRandomAccessFile>
        <!-- 异步日志配置 -->
        <Async name="AsyncAll">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="ALL"/>
        </Async>
    </Appenders>

    <Loggers>
        <Logger name="druid.sql" level="DEBUG" additivity="false">
            <AppenderRef ref="AsyncAll"/>
        </Logger>
        <Logger name="druid.sql.Connection" level="INFO" additivity="false">
            <AppenderRef ref="AsyncAll"/>
        </Logger>
        <Logger name="net.sf.ehcache" level="INFO" additivity="false">
            <AppenderRef ref="AsyncAll"/>
        </Logger>
        <logger name="com.yinda" level="DEBUG" additivity="true">
            <AppenderRef ref="AsyncAll"/>
        </logger>
        <root level="ALL">
            <appender-ref ref="Console"/>
        </root>
    </Loggers>
</Configuration>